/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import {useFrame} from "react-three-fiber"

type GLTFResult = GLTF & {
  nodes: {
    mewithdesk20: THREE.Mesh
    Plane: THREE.Mesh
  }
  materials: {
    palette: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
  }
}

export default function Loader(props: JSX.IntrinsicElements['group']) {
  //@ts-ignore
  const { nodes, materials } = useGLTF('/final2.glb') as GLTFResult

  const ref = useRef()

  useFrame(() => {
    //@ts-ignore
    ref.current.rotation.y += 0.0015;
  });

  return (
    //@ts-ignore
    <group {...props} ref={ref} dispose={null} rotation-x={Math.PI * 0.15} rotation-y={Math.PI * 0.15}>
      <mesh geometry={nodes.mewithdesk20.geometry} material={materials.palette} rotation={[Math.PI / 2, 0, 0]} scale={1.88} />
      <mesh geometry={nodes.Plane.geometry} material={materials.Material} scale={10.8} />
    </group>
  )
}

useGLTF.preload('/final2.glb')
